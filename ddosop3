import os
import requests
import random
import threading
import json
import time
from tkinter import Tk, Label, Entry, Button, scrolledtext

# Global variables
generation_running = False
console_lock = threading.Lock()

def center(var: str, space: int = None):
    if not space:
        space = (os.get_terminal_size().columns - len(var.splitlines()[int(len(var.splitlines()) / 2)])) / 2
    return "\n".join((' ' * int(space)) + var for var in var.splitlines())

class Console():
    def printer(self, status, code):
        with console_lock:
            output_text.insert('end', f"{status} > discord.gift/{code}\n")
            output_text.see('end')

class Worker():
    def random_proxy(self):
        with open('config/proxies.txt', 'r') as f:
            proxies = [line.strip() for line in f]
        return random.choice(proxies)

    def run(self):
        global generation_running
        while generation_running:
            self.code = "".join(random.choice("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890") for _ in range(16))
            try:
                req = requests.get(
                    f'https://discordapp.com/api/v6/entitlements/gift-codes/{self.code}?with_application=false&with_subscription_plan=true',
                    proxies={'http': 'http://' + self.random_proxy(), 'https': 'https://' + self.random_proxy()},
                    timeout=1
                )
                if req.status_code == 200:
                    Console().printer("Valid", self.code)
                    with open('results/hit.txt', 'a+') as f:
                        f.write(self.code + "\n")
                    try:
                        webhook_url = webhook_entry.get().strip()
                        if webhook_url:
                            response = requests.post(
                                webhook_url,
                                json={"content": f"||@here|| **__New Valid Nitro !!__**\n\nhttps://discord.gift/{self.code}",
                                      "username": "Nitro Generator",
                                      "avatar_url": ""}
                            )
                            if response.status_code != 204:  # 204 No Content is the expected response for a successful request
                                output_text.insert('end', f"Failed to send to webhook: {response.status_code} {response.text}\n")
                                output_text.see('end')
                        else:
                            output_text.insert('end', "Webhook URL is empty.\n")
                            output_text.see('end')
                    except Exception as e:
                        output_text.insert('end', f"Exception when sending to webhook: {str(e)}\n")
                        output_text.see('end')
                elif req.status_code == 404:
                    Console().printer("Invalid", self.code)
                elif req.status_code == 429:
                    Console().printer("RTlimit", self.code)
                    time.sleep(int(delay_entry.get()))
                else:
                    Console().printer("Retry", self.code)
            except KeyboardInterrupt:
                with console_lock:
                    output_text.insert('end', "Nitro Gen Stopped by Keyboard Interrupt.\n")
                    output_text.see('end')
                break
            except Exception as e:
                Console().printer("Retry", self.code)
                output_text.insert('end', f"Exception during request: {str(e)}\n")
                output_text.see('end')
            time.sleep(int(delay_entry.get()))

def start_generation():
    global generation_running
    if not generation_running:
        generation_running = True
        threading.Thread(target=DNG.run).start()
        status_label.config(text="Message generation started...", fg="blue")

def stop_generation():
    global generation_running
    generation_running = False
    status_label.config(text="Message generation stopped.", fg="orange")

# Create main window
root = Tk()
root.title("Discord Nitro Generator")

# Create and place widgets
Label(root, text="Discord Webhook URL:").pack(pady=5)
webhook_entry = Entry(root, width=50)
webhook_entry.pack()

Label(root, text="Delay (seconds):").pack(pady=5)
delay_entry = Entry(root, width=10)
delay_entry.pack()
delay_entry.insert(0, "1")

Label(root, text="Generated Codes:").pack(pady=5)
output_text = scrolledtext.ScrolledText(root, width=50, height=10)
output_text.pack(padx=10, pady=10)

start_button = Button(root, text="Start Generation", command=start_generation)
start_button.pack(pady=5)

stop_button = Button(root, text="Stop Generation", command=stop_generation)
stop_button.pack(pady=5)

status_label = Label(root, text="", fg="black")
status_label.pack(pady=5)

# Initialize the console and worker
console = Console()
DNG = Worker()

# Start the Tkinter event loop
root.mainloop()
